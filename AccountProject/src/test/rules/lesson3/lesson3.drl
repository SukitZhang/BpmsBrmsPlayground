//created on: 07/06/2017
package droolscours

//list any import classes here.

import java.util.ArrayList;
import droolscours.CashFlow;
import droolscours.PrivateAccount;
import droolscours.Customer;
import droolscours.Account;
import droolscours.AccountingPeriod;
import droolscours.service.CustomerService;
import util.OutputDisplay;

//declare any global variables here

global OutputDisplay showResults;
global CustomerService serviceCustomer;

/*
rule "The cashFlow can be a credit or a debit"

    when
        $cash : CashFlow(type in (CashFlow.DEBIT, CashFlow.CREDIT))
    then
        showResults.showText("The cashFlow is a credit or a debit");
end

rule "Accessor"

	when
		$cash : PrivateAccount(owner.name == "Héron")
	then
		showResults.showText("Account is owned by Héron");
end

rule "infixAnd"

	when
		($c1 : Customer (country == "GB") and PrivateAccount(owner == $c1))
			or
		($c1 : Customer (country == "US") and PrivateAccount(owner == $c1))
	then
		showResults.showText("Person lives in GB or US");
end


rule "no customer"
	when
		not Customer()
	then
		showResults.showText("No customer");
end

rule "Exists"
	when
		exists Account()
	then 
		showResults.showText("Account exists");
end

rule "ForAll"
	when
		forall (Account($no : accountNo)
				CashFlow(accountNo == $no))
	then
		showResults.showText("All cashflows are related to an Account");
end


rule "fromCondition"
	when
		$c : Customer()
		$cc : Customer(name == $c.name, surname == $c.surname, country != $c.country) from serviceCustomer.getListCustomer();
	then
		showResults.showText("Found same customer in 2 countries");
end


rule "More them 2 CashFlow Line"
	when
		$c: Account($acc: accountNo)
		$p: AccountingPeriod($sDate: startDate, $eDate: endDate)
		$list: ArrayList(size >= 2) from collect(CashFlow(mvtDate >= $sDate && mvtDate <= $eDate, accountNo == $acc))
	then
		showResults.showText("Found more than 2 Cashflow Lines");
		showResults.showText("<<<<<<<<<<<");
		for (Object ff : $list) {
			showResults.showText(ff.toString());
		}
		showResults.showText(">>>>>>>>>>>");
end		

rule "Numbers of CashFlow Line"
	when
		$c: Account($acc : accountNo)
		$p: AccountingPeriod($sDate : startDate, $eDate : endDate)
		ArrayList($listSize : size) from collect (CashFlow(mvtDate >= $sDate && mvtDate <= $eDate, accountNo == $acc))
	then
		showResults.showText("Found " + $listSize + " CashFlow Lines");
end

*/

rule "Credit and Debit rule"
	when
		$c : Account($acc : accountNo)
		$p : AccountingPeriod($sDate : startDate, $eDate : endDate)
		$totalCredit : Number(doubleValue > 100)
			from accumulate(
				CashFlow(type == CashFlow.CREDIT, $value : amount, mvtDate >= $sDate && mvtDate <= $eDate, accountNo == $acc),
				init(double total = 0;),
				action(total += $value;),
				reverse(total -= $value;),
				result(total)
			)
		$totalDebit : Number(doubleValue > 100)
			from accumulate(
				CashFlow(type == CashFlow.DEBIT, $value : amount, mvtDate >= $sDate && mvtDate <= $eDate, accountNo == $acc),
				init(double total = 0;),
				action(total += $value;),
				reverse(total -= $value;),
				result(total)
			)
		then
			showResults.showText("Found " + $totalCredit + " as credit");
			showResults.showText("Found " + $totalDebit + " as debit");			
end
		
		
		
		

		